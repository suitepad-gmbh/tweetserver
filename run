#!/bin/bash

function jsonval {
    temp=`echo $json | sed 's/\\\\\//\//g' | sed 's/[{}]//g' | awk -v k="text" '{n=split($0,a,","); for (i=1; i<=n; i++) print a[i]}' | sed 's/\"\:\"/\|/g' | sed 's/[\,]/ /g' | sed 's/\"//g' | grep -w $prop`
    echo ${temp##*|}
}

echo "- requesting access token"
BASIC=`echo -ne "$CONSUMER_KEY:$CONSUMER_SECRET" | base64 -w0`
json=`curl -H "Authorization: Basic $BASIC" -d "grant_type=client_credentials" https://api.twitter.com/oauth2/token`
prop='access_token'
access_token=`jsonval`

if [ -z "$access_token" ]; then
  echo "ERROR: no access token received"
  echo $json
  exit 1
fi

echo "- access token received"
echo "- creating nginx config"

echo """
# This defines a 10 megabyte cache for the proxy service, and needs to live
# outside of the virtual host configuration. Adjust the path according to
# your environment.
# proxy_cache_path  /var/cache/nginx/twitter_api_proxy levels=1:2 keys_zone=twitter_api_proxy:10m;

# The virtual host configuration.
server {

  # If your want to secure your proxy with SSL, replace with the appropriate SSL configuration.
  listen 80;

  # Replace this with the name of the domain you wish to run your proxy on.
  server_name _;

  # Replace this with your own document root.
  root /var/www;

  # This setting attempts to use files in the document root before
  # hitting the Twitter proxy. This allows you to put a permissive
  # crossdomain.xml file in your document root, and have it show up
  # in the browser.
  location / {
    try_files \$uri \$uri/index.html @twitter;
  }

  # The Twitter proxy code!
  location @twitter {

    # Caching settings, to avoid rate limits on the API service.
    # proxy_cache twitter_api_proxy;
    # proxy_cache_use_stale error updating timeout;
    # proxy_cache_valid 200 302 404 5m;  # The server cache expires after 5 minutes - adjust as required.
    # proxy_ignore_headers X-Accel-Expires Expires Cache-Control Set-Cookie;

    # Hide Twitter's own caching headers - we're applying our own.
    # proxy_hide_header X-Accel-Expires;
    # proxy_hide_header Expires;
    # proxy_hide_header Cache-Control;
    # proxy_hide_header pragma;
    # proxy_hide_header set-cookie;
    # expires 5m;  # The browser cache expires after 5 minutes - adjust as required.

    # Set the correct host name to connect to the Twitter API.
    proxy_set_header Host api.twitter.com;

    # Add authentication headers - edit and add in your own bearer token.
    proxy_set_header Authorization \"Bearer $access_token\";

    # Actually proxy the request to Twitter API!
    proxy_pass https://api.twitter.com;

    # CORS
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
    add_header 'Access-Control-Allow-Headers' '*';
  }

}
""" > default.conf

echo "- config created"
echo "- starting nginx"

nginx -g "daemon off;"
